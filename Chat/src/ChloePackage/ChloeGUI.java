/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ChloePackage;

import java.io.*;
import java.net.*;
import chat.Member;
import chat.Message;
import javax.swing.JOptionPane;

public class ChloeGUI extends javax.swing.JFrame {

    /**
     * Creates new form ChloeGUI
     */
    public ChloeGUI() {
        initComponents();
        this.setResizable(false);
        this.setTitle("Chloe");
        this.setLocationRelativeTo(null);
        leaveButton.setEnabled(false);
        publicRadio.setEnabled(true);
        chloeScreen.setEditable(false);
    }

    public void appendChloeScreen(Object o) {
        chloeScreen.append(o + "\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        radioGroup = new javax.swing.ButtonGroup();
        sendButton = new javax.swing.JButton();
        searchButton = new javax.swing.JButton();
        publicRadio = new javax.swing.JRadioButton();
        privateRadio = new javax.swing.JRadioButton();
        recepientBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        chloeScreen = new javax.swing.JTextArea();
        joinButton = new javax.swing.JButton();
        leaveButton = new javax.swing.JButton();
        ChloeTextBox = new javax.swing.JTextField();
        labelChloe = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        sendButton.setBackground(new java.awt.Color(0, 0, 153));
        sendButton.setFont(new java.awt.Font("High Tower Text", 0, 14)); // NOI18N
        sendButton.setForeground(new java.awt.Color(255, 255, 255));
        sendButton.setText("Send");
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(0, 0, 153));
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/PeterPackage/searchMedium.png"))); // NOI18N
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        radioGroup.add(publicRadio);
        publicRadio.setFont(new java.awt.Font("High Tower Text", 1, 13)); // NOI18N
        publicRadio.setText("Public");
        publicRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publicRadioActionPerformed(evt);
            }
        });

        radioGroup.add(privateRadio);
        privateRadio.setFont(new java.awt.Font("High Tower Text", 1, 13)); // NOI18N
        privateRadio.setText("Private");
        privateRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateRadioActionPerformed(evt);
            }
        });

        recepientBox.setBackground(new java.awt.Color(204, 204, 255));
        recepientBox.setFont(new java.awt.Font("High Tower Text", 0, 18)); // NOI18N
        recepientBox.setText("Mark");

        chloeScreen.setBackground(new java.awt.Color(204, 204, 255));
        chloeScreen.setColumns(20);
        chloeScreen.setFont(new java.awt.Font("High Tower Text", 0, 14)); // NOI18N
        chloeScreen.setRows(5);
        jScrollPane1.setViewportView(chloeScreen);

        joinButton.setBackground(new java.awt.Color(0, 204, 0));
        joinButton.setFont(new java.awt.Font("High Tower Text", 0, 13)); // NOI18N
        joinButton.setForeground(new java.awt.Color(0, 0, 0));
        joinButton.setText("Join");
        joinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                joinButtonActionPerformed(evt);
            }
        });

        leaveButton.setBackground(new java.awt.Color(204, 0, 0));
        leaveButton.setFont(new java.awt.Font("High Tower Text", 0, 14)); // NOI18N
        leaveButton.setForeground(new java.awt.Color(0, 0, 0));
        leaveButton.setText("Leave");
        leaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveButtonActionPerformed(evt);
            }
        });

        ChloeTextBox.setBackground(new java.awt.Color(153, 153, 255));
        ChloeTextBox.setFont(new java.awt.Font("High Tower Text", 0, 13)); // NOI18N
        ChloeTextBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChloeTextBoxActionPerformed(evt);
            }
        });

        labelChloe.setFont(new java.awt.Font("Magneto", 1, 18)); // NOI18N
        labelChloe.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelChloe.setText("WeChat");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ChloeTextBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sendButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(publicRadio)
                            .addComponent(privateRadio))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelChloe, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(recepientBox, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(joinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(leaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(publicRadio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(privateRadio)
                            .addComponent(recepientBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(labelChloe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(joinButton)
                                .addComponent(leaveButton)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sendButton)
                    .addComponent(ChloeTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed

        if (publicRadio.isSelected() && leaveButton.isEnabled()) {
            try {
                Socket toCordMsg = new Socket("localhost", 1111);
                ObjectOutputStream out = new ObjectOutputStream(toCordMsg.getOutputStream());
                ObjectInputStream in = new ObjectInputStream(toCordMsg.getInputStream());

                Message msg = new Message("all", "Chloe", ChloeTextBox.getText(), false);

                out.writeObject(msg);
                appendChloeScreen("Me: " + ChloeTextBox.getText());
                ChloeTextBox.setText("");
                Member m = new Member(5555, "Chloe");
                out.writeObject(m);
                out.close();
                in.close();
                toCordMsg.close();

            } catch (Exception e) {
                System.out.println(e);
            }
        } else if (privateRadio.isSelected() && leaveButton.isEnabled()) {
            try {
                Socket sendToNext = new Socket("localhost", Chloe.chloeNextNode);
                ObjectOutputStream oos = new ObjectOutputStream(sendToNext.getOutputStream());
                Message pm = new Message(recepientBox.getText(), "Chloe", ChloeTextBox.getText(), true);
                pm.encryptMsg();
                oos.writeObject(pm);
                ChloeTextBox.setText("");
                oos.close();
                sendToNext.close();
            } catch (Exception e) {
                System.out.println(e);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Join and Choose Chat Recipient");
        }
    }//GEN-LAST:event_sendButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        labelChloe.setText(recepientBox.getText());
    }//GEN-LAST:event_searchButtonActionPerformed

    private void publicRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publicRadioActionPerformed
        if (publicRadio.isEnabled()) {
            labelChloe.setText("Everyone");
            recepientBox.setEditable(false);
        }
    }//GEN-LAST:event_publicRadioActionPerformed

    private void privateRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateRadioActionPerformed
        // TODO add your handling code here:
        if (privateRadio.isEnabled()) {
            recepientBox.setEditable(true);

        }
    }//GEN-LAST:event_privateRadioActionPerformed

    private void joinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_joinButtonActionPerformed
        try {
            joinButton.setEnabled(false);
            leaveButton.setEnabled(true);
            Socket toCordinator = new Socket("localhost", 1111);
            ObjectOutputStream out = new ObjectOutputStream(toCordinator.getOutputStream());
            ObjectInputStream in = new ObjectInputStream(toCordinator.getInputStream());

            Message mes = new Message("all", "Chloe", "join", false);
            //String s = "join";
            out.writeObject(mes);
            Member m = new Member(5555, "Chloe");
            out.writeObject(m);
            out.close();
            in.close();
            toCordinator.close();

        } catch (Exception ex) {
            System.out.println(ex);
            //error box
        }
    }//GEN-LAST:event_joinButtonActionPerformed

    private void leaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveButtonActionPerformed

        leaveButton.setEnabled(false);
        joinButton.setEnabled(true);

        Socket toCordLeave;
        try {
            toCordLeave = new Socket("localhost", 1111);
            ObjectOutputStream out = new ObjectOutputStream(toCordLeave.getOutputStream());
            ObjectInputStream in = new ObjectInputStream(toCordLeave.getInputStream());

            Message m = new Message("leave", "leave", "leave", false);
            out.writeObject(m);
            out.writeObject("Chloe");
            out.close();
            in.close();
            toCordLeave.close();
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_leaveButtonActionPerformed

    private void ChloeTextBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChloeTextBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ChloeTextBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChloeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChloeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChloeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChloeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChloeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ChloeTextBox;
    private javax.swing.JTextArea chloeScreen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton joinButton;
    private javax.swing.JLabel labelChloe;
    private javax.swing.JButton leaveButton;
    private javax.swing.JRadioButton privateRadio;
    private javax.swing.JRadioButton publicRadio;
    private javax.swing.ButtonGroup radioGroup;
    private javax.swing.JTextField recepientBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton sendButton;
    // End of variables declaration//GEN-END:variables
}
